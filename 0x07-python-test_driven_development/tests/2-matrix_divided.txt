# matrix_divided_tests.txt

"""
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


# Valid Matrix and Non-Zero Divisor
>>> matrix_divided([[1, 2], [3, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided(matrix=[[1]], div=1)
[[1.0]]

# Valid Matrix and Non-Zero Float Divisor
>>> matrix_divided([[5, 10], [15, 20]], 3.5)
[[1.43, 2.86], [4.29, 5.71]]

# Valid Matrix and Zero Divisor
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Invalid Matrix (Not a List of Lists)
>>> matrix_divided([1, 2, 3], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Invalid Matrix (Inner Lists Have Different Lengths)
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Invalid Divisor (Not an Integer or Float)
>>> matrix_divided([[1, 2], [3, 4]], 'abc')
Traceback (most recent call last):
TypeError: div must be a number

"""

# You can add more test cases here if needed

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "not a number"))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number
