"""
This is a doctest file for the matrix_mul function.

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_a = [[1, 2], [3, 4]]
>>> matrix_b = [[5, 6], [7, 8]]
>>> result_matrix = matrix_mul(matrix_a, matrix_b)
>>> result_matrix
[[19, 22], [43, 50]]

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2, 3]], [[3, 4, 5], [5, 6, 8], [9, 10, 11]])
[[40, 46, 54]]

>>> matrix_mul([[2]], [[7]])
[[14]]

>>> matrixA = [[1, 2], [3, 4]]
>>> matrixB = [[5, 6, 7], [8, 9, 10]]
>>> matrix_mul(matrixA, matrixB)
[[21, 24, 27], [47, 54, 61]]

>>> empty_matrix = []
>>> matrix_mul(empty_matrix, matrix_b)
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> invalid_matrix = [[1, 2], [3, 'x']]
>>> matrix_mul(invalid_matrix, matrix_b)
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> incompatible_matrix = [[1, 2], [3, 4]]
>>> incompatible_matrix_b = [[5, 6, 7], [8, 9, 10], [8, 5, 7]]
>>> matrix_mul(incompatible_matrix, incompatible_matrix_b)
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul(9, [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> matrix_mul([[1, 2], [3, 4]], 9)
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> matrix_mul(9, 9)
Traceback (most recent call last):
...
TypeError: m_a must be a list


>>> matrix_mul([1, 2, 3, 4], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3, 4])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> matrix_mul([1, 2, 3, 4], [1, 2, 3, 4])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists


>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> matrix_mul([], [])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul([[]], [[]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty


>>> matrix_mul([[1, 2], ["Betty", 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[1, "Holberton"], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 2], [None, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats


>>> matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [3, 4]], [[1], [3, 4]])
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 2], [3]], [[1], [3, 4]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size


>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied


>>> matrix_mul()
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> matrix_mul([[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

"""
